name: QuietOS CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  RUST_TOOLCHAIN: nightly
  TARGET_FILE: arch/i686-none.json

jobs:
  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust nightly with rustfmt
        run: |
          rustup toolchain install $RUST_TOOLCHAIN
          rustup component add rustfmt --toolchain $RUST_TOOLCHAIN

      - name: Run cargo fmt
        run: cargo +$RUST_TOOLCHAIN fmt --all -- --check

  clippy:
    name: Clippy linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust nightly with clippy
        run: |
          rustup toolchain install $RUST_TOOLCHAIN
          rustup component add clippy --toolchain $RUST_TOOLCHAIN

      - name: Run cargo clippy
        run: cargo +$RUST_TOOLCHAIN clippy --all-features -- -D warnings

  check:
    name: Cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm

      - name: Install Rust nightly
        run: rustup toolchain install $RUST_TOOLCHAIN

      - name: Ensure target file exists
        run: |
          if [ ! -f $TARGET_FILE ]; then
            echo "Target file $TARGET_FILE missing!"
            exit 1
          fi

      - name: Cargo check
        run: cargo +$RUST_TOOLCHAIN check --all-targets --all-features

  build:
    name: Kernel build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm

      - name: Install Rust nightly
        run: rustup toolchain install $RUST_TOOLCHAIN

      - name: Ensure target file exists
        run: |
          if [ ! -f $TARGET_FILE ]; then
            echo "Target file $TARGET_FILE missing!"
            exit 1
          fi

      - name: Build kernel
        run: cargo +$RUST_TOOLCHAIN build -Z build-std=core,compiler_builtins --target $TARGET_FILE
